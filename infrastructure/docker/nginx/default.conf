server {
    listen 80;
    server_name localhost;
    
    # Configuration des logs
    access_log /var/log/nginx/gestasso_access.log;
    error_log /var/log/nginx/gestasso_error.log;

    # Frontend SvelteKit - Servir les fichiers statiques du frontend
    location / {
        root /var/www/frontend/build;
        index index.html;
        try_files $uri $uri/ /index.html;
        
        # Configuration pour les fichiers statiques SvelteKit
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Configuration pour les assets SvelteKit
        location /_app/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # Backend API - Configuration CORS pour l'API
    location /api {
        root /var/www/symfony/public;
        index index.php;
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        try_files $uri /index.php$is_args$args;
    }

    # Configuration pour PHP (Backend API)
    location ~ ^/api/.*\.php(/|$) {
        root /var/www/symfony/public;
        fastcgi_pass php:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        
        fastcgi_param SCRIPT_FILENAME /var/www/symfony/public/index.php;
        fastcgi_param DOCUMENT_ROOT /var/www/symfony/public;
        
        # Configuration pour les uploads
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_connect_timeout 300;
        
        # Empêcher l'accès direct aux fichiers PHP
        internal;
    }

    # Bloquer l'accès aux fichiers PHP dans les autres répertoires
    location ~ \.php$ {
        return 404;
    }

    # Sécurité - Bloquer l'accès aux fichiers sensibles
    location ~ /\. {
        deny all;
    }

    location ~ /(var|config|src|tests|vendor)/ {
        deny all;
    }

    location ~ \.(env|log|sql|md)$ {
        deny all;
    }

    # Configuration pour les uploads
    location /uploads/ {
        alias /var/www/symfony/public/uploads/;
        expires 1y;
        add_header Cache-Control "public";
    }

    # Configuration pour le Web Profiler (développement)
    location /_profiler {
        try_files $uri /index.php$is_args$args;
    }

    location /_wdt {
        try_files $uri /index.php$is_args$args;
    }

    # Configuration pour API Platform docs
    location /api/docs {
        try_files $uri /index.php$is_args$args;
    }

    # Rate limiting pour l'API
    location /api/auth {
        limit_req zone=auth burst=5 nodelay;
        try_files $uri /index.php$is_args$args;
    }

    location /api/ {
        limit_req zone=api burst=10 nodelay;
        try_files $uri /index.php$is_args$args;
    }
} 